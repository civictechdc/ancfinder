"""
Django settings for ancfinder project.

Generated by 'django-admin startproject' using Django 2.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os, sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
environment_file = '/srv/app/environment.yaml'

if os.path.exists(environment_file):
    print("Running production deployment...")

    import yaml
    with open(environment_file) as f:
      env = yaml.load(f)
    SECRET_KEY = env['DJANGO_SECRET_KEY']
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'HOST': env['DATABASE_HOST'],
            'PORT': int(env['DATABASE_PORT']),
            'NAME': env['DATABASE_NAME'],
            'USER': env['DATABASE_USERNAME'],
            'PASSWORD': env['DATABASE_PASSWORD'],
        }
    }

    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

    ADMINS = env['ADMINS']
    MANAGERS = ADMINS

    # EMAIL_HOST = env['SMTP_HOST']
    # EMAIL_HOST_USER = env['SMTP_USER']
    # EMAIL_HOST_PASSWORD = env['SMTP_PASSWORD']
    # EMAIL_USE_TLS = True

    ALLOWED_HOSTS = ["*"] # anything unexpected will be filtered out by the http server

    OPENID_TEMP_FOLDER = "/tmp/openid-ancfinder"

    # Absolute path to the directory static files should be collected to.
    # Don't put anything in this directory yourself; store your static files
    # in apps' "static/" subdirectories and in STATICFILES_DIRS.
    # Example: "/home/media/media.lawrence.com/static/"
    STATIC_URL = env["STATIC_ROOT"]

else:
    print("Running development deployment...")

    SECRET_KEY = '4k90fdv_y#5na2wul&fcd&xg23va!7#3h)we)6%c2ma8mt0uc-'
    DEBUG = True

    ALLOWED_HOSTS = ["*"]

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(os.path.dirname(__file__), 'database.sqlite').replace('\\','/'),
        }
    }

    LOGGING = {
        'version': 1,
        'handlers': {
            'console':{
                'level':'INFO',
                'class':'logging.StreamHandler',
                'stream': sys.stdout
            }
        },
        'loggers': {
            'ancfinder_site.views': {
                'handlers': ['console'],
                'level': 'INFO',
            },
            'ancfinder_site.management.commands.update_models': {
                'handlers': ['console'],
                'level': 'INFO',
            }
        }
    }

    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

    ADMINS = (
        ('Admin', 'your_email@example.com'),
    )

    MANAGERS = ADMINS

    # Absolute path to the directory static files should be collected to.
    # Don't put anything in this directory yourself; store your static files
    # in apps' "static/" subdirectories and in STATICFILES_DIRS.
    # Example: "/home/media/media.lawrence.com/static/"
    STATIC_URL = '/static/'

INSTALLED_APPS = [
    'ancfinder_site.apps.AncfinderSiteConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'letsencrypt',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ancfinder.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'ancfinder_site.views.TemplateContextProcessor',
            ],
        },
    },
]

WSGI_APPLICATION = 'ancfinder.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True
